// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: bible/v1/bible.proto

package bible

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BookName int32

const (
	BookName_BOOK_NAME_GENESIS         BookName = 0
	BookName_BOOK_NAME_EXODUS          BookName = 1
	BookName_BOOK_NAME_LEVITICUS       BookName = 2
	BookName_BOOK_NAME_NUMBERS         BookName = 3
	BookName_BOOK_NAME_DEUTERONOMY     BookName = 4
	BookName_BOOK_NAME_JOSHUA          BookName = 5
	BookName_BOOK_NAME_JUDGES          BookName = 6
	BookName_BOOK_NAME_RUTH            BookName = 7
	BookName_BOOK_NAME_1_SAMUEL        BookName = 8
	BookName_BOOK_NAME_2_SAMUEL        BookName = 9
	BookName_BOOK_NAME_1_KINGS         BookName = 10
	BookName_BOOK_NAME_2_KINGS         BookName = 11
	BookName_BOOK_NAME_1_CHRONICLES    BookName = 12
	BookName_BOOK_NAME_2_CHRONICLES    BookName = 13
	BookName_BOOK_NAME_EZRA            BookName = 14
	BookName_BOOK_NAME_NEHEMIAH        BookName = 15
	BookName_BOOK_NAME_ESTHER          BookName = 16
	BookName_BOOK_NAME_JOB             BookName = 17
	BookName_BOOK_NAME_PSALM           BookName = 18
	BookName_BOOK_NAME_PROVERBS        BookName = 19
	BookName_BOOK_NAME_ECCLESIASTES    BookName = 20
	BookName_BOOK_NAME_SONG_OF_SONGS   BookName = 21
	BookName_BOOK_NAME_ISAIAH          BookName = 22
	BookName_BOOK_NAME_JEREMIAH        BookName = 23
	BookName_BOOK_NAME_LAMENTATIONS    BookName = 24
	BookName_BOOK_NAME_EZEKIEL         BookName = 25
	BookName_BOOK_NAME_DANIEL          BookName = 26
	BookName_BOOK_NAME_HOSEA           BookName = 27
	BookName_BOOK_NAME_JOEL            BookName = 28
	BookName_BOOK_NAME_AMOS            BookName = 29
	BookName_BOOK_NAME_OBADIAH         BookName = 30
	BookName_BOOK_NAME_JONAH           BookName = 31
	BookName_BOOK_NAME_MICAH           BookName = 32
	BookName_BOOK_NAME_NAHUM           BookName = 33
	BookName_BOOK_NAME_HABAKKUK        BookName = 34
	BookName_BOOK_NAME_ZEPHANIAH       BookName = 35
	BookName_BOOK_NAME_HAGGAI          BookName = 36
	BookName_BOOK_NAME_ZECHARIAH       BookName = 37
	BookName_BOOK_NAME_MALACHI         BookName = 38
	BookName_BOOK_NAME_MATTHEW         BookName = 39
	BookName_BOOK_NAME_MARK            BookName = 40
	BookName_BOOK_NAME_LUKE            BookName = 41
	BookName_BOOK_NAME_JOHN            BookName = 42
	BookName_BOOK_NAME_ACTS            BookName = 43
	BookName_BOOK_NAME_ROMANS          BookName = 44
	BookName_BOOK_NAME_1_CORINTHIANS   BookName = 45
	BookName_BOOK_NAME_2_CORINTHIANS   BookName = 46
	BookName_BOOK_NAME_GALATIANS       BookName = 47
	BookName_BOOK_NAME_EPHESIANS       BookName = 48
	BookName_BOOK_NAME_PHILIPPIANS     BookName = 49
	BookName_BOOK_NAME_COLOSSIANS      BookName = 50
	BookName_BOOK_NAME_1_THESSALONIANS BookName = 51
	BookName_BOOK_NAME_2_THESSALONIANS BookName = 52
	BookName_BOOK_NAME_1_TIMOTHY       BookName = 53
	BookName_BOOK_NAME_2_TIMOTHY       BookName = 54
	BookName_BOOK_NAME_TITUS           BookName = 55
	BookName_BOOK_NAME_PHILEMON        BookName = 56
	BookName_BOOK_NAME_HEBREWS         BookName = 57
	BookName_BOOK_NAME_JAMES           BookName = 58
	BookName_BOOK_NAME_1_PETER         BookName = 59
	BookName_BOOK_NAME_2_PETER         BookName = 60
	BookName_BOOK_NAME_1_JOHN          BookName = 61
	BookName_BOOK_NAME_2_JOHN          BookName = 62
	BookName_BOOK_NAME_3_JOHN          BookName = 63
	BookName_BOOK_NAME_JUDE            BookName = 64
	BookName_BOOK_NAME_REVELATION      BookName = 65
)

// Enum value maps for BookName.
var (
	BookName_name = map[int32]string{
		0:  "BOOK_NAME_GENESIS",
		1:  "BOOK_NAME_EXODUS",
		2:  "BOOK_NAME_LEVITICUS",
		3:  "BOOK_NAME_NUMBERS",
		4:  "BOOK_NAME_DEUTERONOMY",
		5:  "BOOK_NAME_JOSHUA",
		6:  "BOOK_NAME_JUDGES",
		7:  "BOOK_NAME_RUTH",
		8:  "BOOK_NAME_1_SAMUEL",
		9:  "BOOK_NAME_2_SAMUEL",
		10: "BOOK_NAME_1_KINGS",
		11: "BOOK_NAME_2_KINGS",
		12: "BOOK_NAME_1_CHRONICLES",
		13: "BOOK_NAME_2_CHRONICLES",
		14: "BOOK_NAME_EZRA",
		15: "BOOK_NAME_NEHEMIAH",
		16: "BOOK_NAME_ESTHER",
		17: "BOOK_NAME_JOB",
		18: "BOOK_NAME_PSALM",
		19: "BOOK_NAME_PROVERBS",
		20: "BOOK_NAME_ECCLESIASTES",
		21: "BOOK_NAME_SONG_OF_SONGS",
		22: "BOOK_NAME_ISAIAH",
		23: "BOOK_NAME_JEREMIAH",
		24: "BOOK_NAME_LAMENTATIONS",
		25: "BOOK_NAME_EZEKIEL",
		26: "BOOK_NAME_DANIEL",
		27: "BOOK_NAME_HOSEA",
		28: "BOOK_NAME_JOEL",
		29: "BOOK_NAME_AMOS",
		30: "BOOK_NAME_OBADIAH",
		31: "BOOK_NAME_JONAH",
		32: "BOOK_NAME_MICAH",
		33: "BOOK_NAME_NAHUM",
		34: "BOOK_NAME_HABAKKUK",
		35: "BOOK_NAME_ZEPHANIAH",
		36: "BOOK_NAME_HAGGAI",
		37: "BOOK_NAME_ZECHARIAH",
		38: "BOOK_NAME_MALACHI",
		39: "BOOK_NAME_MATTHEW",
		40: "BOOK_NAME_MARK",
		41: "BOOK_NAME_LUKE",
		42: "BOOK_NAME_JOHN",
		43: "BOOK_NAME_ACTS",
		44: "BOOK_NAME_ROMANS",
		45: "BOOK_NAME_1_CORINTHIANS",
		46: "BOOK_NAME_2_CORINTHIANS",
		47: "BOOK_NAME_GALATIANS",
		48: "BOOK_NAME_EPHESIANS",
		49: "BOOK_NAME_PHILIPPIANS",
		50: "BOOK_NAME_COLOSSIANS",
		51: "BOOK_NAME_1_THESSALONIANS",
		52: "BOOK_NAME_2_THESSALONIANS",
		53: "BOOK_NAME_1_TIMOTHY",
		54: "BOOK_NAME_2_TIMOTHY",
		55: "BOOK_NAME_TITUS",
		56: "BOOK_NAME_PHILEMON",
		57: "BOOK_NAME_HEBREWS",
		58: "BOOK_NAME_JAMES",
		59: "BOOK_NAME_1_PETER",
		60: "BOOK_NAME_2_PETER",
		61: "BOOK_NAME_1_JOHN",
		62: "BOOK_NAME_2_JOHN",
		63: "BOOK_NAME_3_JOHN",
		64: "BOOK_NAME_JUDE",
		65: "BOOK_NAME_REVELATION",
	}
	BookName_value = map[string]int32{
		"BOOK_NAME_GENESIS":         0,
		"BOOK_NAME_EXODUS":          1,
		"BOOK_NAME_LEVITICUS":       2,
		"BOOK_NAME_NUMBERS":         3,
		"BOOK_NAME_DEUTERONOMY":     4,
		"BOOK_NAME_JOSHUA":          5,
		"BOOK_NAME_JUDGES":          6,
		"BOOK_NAME_RUTH":            7,
		"BOOK_NAME_1_SAMUEL":        8,
		"BOOK_NAME_2_SAMUEL":        9,
		"BOOK_NAME_1_KINGS":         10,
		"BOOK_NAME_2_KINGS":         11,
		"BOOK_NAME_1_CHRONICLES":    12,
		"BOOK_NAME_2_CHRONICLES":    13,
		"BOOK_NAME_EZRA":            14,
		"BOOK_NAME_NEHEMIAH":        15,
		"BOOK_NAME_ESTHER":          16,
		"BOOK_NAME_JOB":             17,
		"BOOK_NAME_PSALM":           18,
		"BOOK_NAME_PROVERBS":        19,
		"BOOK_NAME_ECCLESIASTES":    20,
		"BOOK_NAME_SONG_OF_SONGS":   21,
		"BOOK_NAME_ISAIAH":          22,
		"BOOK_NAME_JEREMIAH":        23,
		"BOOK_NAME_LAMENTATIONS":    24,
		"BOOK_NAME_EZEKIEL":         25,
		"BOOK_NAME_DANIEL":          26,
		"BOOK_NAME_HOSEA":           27,
		"BOOK_NAME_JOEL":            28,
		"BOOK_NAME_AMOS":            29,
		"BOOK_NAME_OBADIAH":         30,
		"BOOK_NAME_JONAH":           31,
		"BOOK_NAME_MICAH":           32,
		"BOOK_NAME_NAHUM":           33,
		"BOOK_NAME_HABAKKUK":        34,
		"BOOK_NAME_ZEPHANIAH":       35,
		"BOOK_NAME_HAGGAI":          36,
		"BOOK_NAME_ZECHARIAH":       37,
		"BOOK_NAME_MALACHI":         38,
		"BOOK_NAME_MATTHEW":         39,
		"BOOK_NAME_MARK":            40,
		"BOOK_NAME_LUKE":            41,
		"BOOK_NAME_JOHN":            42,
		"BOOK_NAME_ACTS":            43,
		"BOOK_NAME_ROMANS":          44,
		"BOOK_NAME_1_CORINTHIANS":   45,
		"BOOK_NAME_2_CORINTHIANS":   46,
		"BOOK_NAME_GALATIANS":       47,
		"BOOK_NAME_EPHESIANS":       48,
		"BOOK_NAME_PHILIPPIANS":     49,
		"BOOK_NAME_COLOSSIANS":      50,
		"BOOK_NAME_1_THESSALONIANS": 51,
		"BOOK_NAME_2_THESSALONIANS": 52,
		"BOOK_NAME_1_TIMOTHY":       53,
		"BOOK_NAME_2_TIMOTHY":       54,
		"BOOK_NAME_TITUS":           55,
		"BOOK_NAME_PHILEMON":        56,
		"BOOK_NAME_HEBREWS":         57,
		"BOOK_NAME_JAMES":           58,
		"BOOK_NAME_1_PETER":         59,
		"BOOK_NAME_2_PETER":         60,
		"BOOK_NAME_1_JOHN":          61,
		"BOOK_NAME_2_JOHN":          62,
		"BOOK_NAME_3_JOHN":          63,
		"BOOK_NAME_JUDE":            64,
		"BOOK_NAME_REVELATION":      65,
	}
)

func (x BookName) Enum() *BookName {
	p := new(BookName)
	*p = x
	return p
}

func (x BookName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BookName) Descriptor() protoreflect.EnumDescriptor {
	return file_bible_v1_bible_proto_enumTypes[0].Descriptor()
}

func (BookName) Type() protoreflect.EnumType {
	return &file_bible_v1_bible_proto_enumTypes[0]
}

func (x BookName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BookName.Descriptor instead.
func (BookName) EnumDescriptor() ([]byte, []int) {
	return file_bible_v1_bible_proto_rawDescGZIP(), []int{0}
}

type Translation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title        string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Lang         string                 `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
	RevisionDate *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=revision_date,json=revisionDate,proto3" json:"revision_date,omitempty"`
	Desc         string                 `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	Publisher    string                 `protobuf:"bytes,6,opt,name=publisher,proto3" json:"publisher,omitempty"`
	Src          string                 `protobuf:"bytes,7,opt,name=src,proto3" json:"src,omitempty"`
	Books        []*Book                `protobuf:"bytes,8,rep,name=books,proto3" json:"books,omitempty"`
}

func (x *Translation) Reset() {
	*x = Translation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_bible_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Translation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Translation) ProtoMessage() {}

func (x *Translation) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_bible_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Translation.ProtoReflect.Descriptor instead.
func (*Translation) Descriptor() ([]byte, []int) {
	return file_bible_v1_bible_proto_rawDescGZIP(), []int{0}
}

func (x *Translation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Translation) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Translation) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *Translation) GetRevisionDate() *timestamppb.Timestamp {
	if x != nil {
		return x.RevisionDate
	}
	return nil
}

func (x *Translation) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Translation) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *Translation) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *Translation) GetBooks() []*Book {
	if x != nil {
		return x.Books
	}
	return nil
}

type Book struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       BookName   `protobuf:"varint,1,opt,name=id,proto3,enum=bible.v0.BookName" json:"id,omitempty"`
	Chapters []*Chapter `protobuf:"bytes,2,rep,name=chapters,proto3" json:"chapters,omitempty"`
}

func (x *Book) Reset() {
	*x = Book{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_bible_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Book) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Book) ProtoMessage() {}

func (x *Book) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_bible_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Book.ProtoReflect.Descriptor instead.
func (*Book) Descriptor() ([]byte, []int) {
	return file_bible_v1_bible_proto_rawDescGZIP(), []int{1}
}

func (x *Book) GetId() BookName {
	if x != nil {
		return x.Id
	}
	return BookName_BOOK_NAME_GENESIS
}

func (x *Book) GetChapters() []*Chapter {
	if x != nil {
		return x.Chapters
	}
	return nil
}

type Chapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verses []string `protobuf:"bytes,1,rep,name=verses,proto3" json:"verses,omitempty"`
}

func (x *Chapter) Reset() {
	*x = Chapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bible_v1_bible_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chapter) ProtoMessage() {}

func (x *Chapter) ProtoReflect() protoreflect.Message {
	mi := &file_bible_v1_bible_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chapter.ProtoReflect.Descriptor instead.
func (*Chapter) Descriptor() ([]byte, []int) {
	return file_bible_v1_bible_proto_rawDescGZIP(), []int{2}
}

func (x *Chapter) GetVerses() []string {
	if x != nil {
		return x.Verses
	}
	return nil
}

var File_bible_v1_bible_proto protoreflect.FileDescriptor

var file_bible_v1_bible_proto_rawDesc = []byte{
	0x0a, 0x14, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x62, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x30,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xf2, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x0d, 0x72,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x72, 0x63,
	0x12, 0x24, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52,
	0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x59, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x22,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x62, 0x69, 0x62,
	0x6c, 0x65, 0x2e, 0x76, 0x30, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x30, 0x2e,
	0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x73, 0x22, 0x21, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x73, 0x2a, 0x99, 0x0c, 0x0a, 0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x47,
	0x45, 0x4e, 0x45, 0x53, 0x49, 0x53, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x4f, 0x4f, 0x4b,
	0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x45, 0x58, 0x4f, 0x44, 0x55, 0x53, 0x10, 0x01, 0x12, 0x17,
	0x0a, 0x13, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4c, 0x45, 0x56, 0x49,
	0x54, 0x49, 0x43, 0x55, 0x53, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x4f, 0x4f, 0x4b, 0x5f,
	0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x53, 0x10, 0x03, 0x12, 0x19,
	0x0a, 0x15, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x44, 0x45, 0x55, 0x54,
	0x45, 0x52, 0x4f, 0x4e, 0x4f, 0x4d, 0x59, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x4f, 0x4f,
	0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4a, 0x4f, 0x53, 0x48, 0x55, 0x41, 0x10, 0x05, 0x12,
	0x14, 0x0a, 0x10, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4a, 0x55, 0x44,
	0x47, 0x45, 0x53, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x5f, 0x52, 0x55, 0x54, 0x48, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x4f, 0x4f,
	0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x31, 0x5f, 0x53, 0x41, 0x4d, 0x55, 0x45, 0x4c, 0x10,
	0x08, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x32,
	0x5f, 0x53, 0x41, 0x4d, 0x55, 0x45, 0x4c, 0x10, 0x09, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x4f, 0x4f,
	0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x31, 0x5f, 0x4b, 0x49, 0x4e, 0x47, 0x53, 0x10, 0x0a,
	0x12, 0x15, 0x0a, 0x11, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x32, 0x5f,
	0x4b, 0x49, 0x4e, 0x47, 0x53, 0x10, 0x0b, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x4f, 0x4f, 0x4b, 0x5f,
	0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x31, 0x5f, 0x43, 0x48, 0x52, 0x4f, 0x4e, 0x49, 0x43, 0x4c, 0x45,
	0x53, 0x10, 0x0c, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45,
	0x5f, 0x32, 0x5f, 0x43, 0x48, 0x52, 0x4f, 0x4e, 0x49, 0x43, 0x4c, 0x45, 0x53, 0x10, 0x0d, 0x12,
	0x12, 0x0a, 0x0e, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x45, 0x5a, 0x52,
	0x41, 0x10, 0x0e, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45,
	0x5f, 0x4e, 0x45, 0x48, 0x45, 0x4d, 0x49, 0x41, 0x48, 0x10, 0x0f, 0x12, 0x14, 0x0a, 0x10, 0x42,
	0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x45, 0x53, 0x54, 0x48, 0x45, 0x52, 0x10,
	0x10, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4a,
	0x4f, 0x42, 0x10, 0x11, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d,
	0x45, 0x5f, 0x50, 0x53, 0x41, 0x4c, 0x4d, 0x10, 0x12, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x4f, 0x4f,
	0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x52, 0x42, 0x53, 0x10,
	0x13, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x45,
	0x43, 0x43, 0x4c, 0x45, 0x53, 0x49, 0x41, 0x53, 0x54, 0x45, 0x53, 0x10, 0x14, 0x12, 0x1b, 0x0a,
	0x17, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x4f, 0x4e, 0x47, 0x5f,
	0x4f, 0x46, 0x5f, 0x53, 0x4f, 0x4e, 0x47, 0x53, 0x10, 0x15, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x4f,
	0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x49, 0x53, 0x41, 0x49, 0x41, 0x48, 0x10, 0x16,
	0x12, 0x16, 0x0a, 0x12, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4a, 0x45,
	0x52, 0x45, 0x4d, 0x49, 0x41, 0x48, 0x10, 0x17, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x4f, 0x4f, 0x4b,
	0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4c, 0x41, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x53, 0x10, 0x18, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d,
	0x45, 0x5f, 0x45, 0x5a, 0x45, 0x4b, 0x49, 0x45, 0x4c, 0x10, 0x19, 0x12, 0x14, 0x0a, 0x10, 0x42,
	0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x44, 0x41, 0x4e, 0x49, 0x45, 0x4c, 0x10,
	0x1a, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x48,
	0x4f, 0x53, 0x45, 0x41, 0x10, 0x1b, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e,
	0x41, 0x4d, 0x45, 0x5f, 0x4a, 0x4f, 0x45, 0x4c, 0x10, 0x1c, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4f,
	0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x41, 0x4d, 0x4f, 0x53, 0x10, 0x1d, 0x12, 0x15,
	0x0a, 0x11, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4f, 0x42, 0x41, 0x44,
	0x49, 0x41, 0x48, 0x10, 0x1e, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x5f, 0x4a, 0x4f, 0x4e, 0x41, 0x48, 0x10, 0x1f, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x4f,
	0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4d, 0x49, 0x43, 0x41, 0x48, 0x10, 0x20, 0x12,
	0x13, 0x0a, 0x0f, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4e, 0x41, 0x48,
	0x55, 0x4d, 0x10, 0x21, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d,
	0x45, 0x5f, 0x48, 0x41, 0x42, 0x41, 0x4b, 0x4b, 0x55, 0x4b, 0x10, 0x22, 0x12, 0x17, 0x0a, 0x13,
	0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x5a, 0x45, 0x50, 0x48, 0x41, 0x4e,
	0x49, 0x41, 0x48, 0x10, 0x23, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x5f, 0x48, 0x41, 0x47, 0x47, 0x41, 0x49, 0x10, 0x24, 0x12, 0x17, 0x0a, 0x13, 0x42,
	0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x5a, 0x45, 0x43, 0x48, 0x41, 0x52, 0x49,
	0x41, 0x48, 0x10, 0x25, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d,
	0x45, 0x5f, 0x4d, 0x41, 0x4c, 0x41, 0x43, 0x48, 0x49, 0x10, 0x26, 0x12, 0x15, 0x0a, 0x11, 0x42,
	0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4d, 0x41, 0x54, 0x54, 0x48, 0x45, 0x57,
	0x10, 0x27, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f,
	0x4d, 0x41, 0x52, 0x4b, 0x10, 0x28, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e,
	0x41, 0x4d, 0x45, 0x5f, 0x4c, 0x55, 0x4b, 0x45, 0x10, 0x29, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4f,
	0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4a, 0x4f, 0x48, 0x4e, 0x10, 0x2a, 0x12, 0x12,
	0x0a, 0x0e, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x53,
	0x10, 0x2b, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f,
	0x52, 0x4f, 0x4d, 0x41, 0x4e, 0x53, 0x10, 0x2c, 0x12, 0x1b, 0x0a, 0x17, 0x42, 0x4f, 0x4f, 0x4b,
	0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x31, 0x5f, 0x43, 0x4f, 0x52, 0x49, 0x4e, 0x54, 0x48, 0x49,
	0x41, 0x4e, 0x53, 0x10, 0x2d, 0x12, 0x1b, 0x0a, 0x17, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x5f, 0x32, 0x5f, 0x43, 0x4f, 0x52, 0x49, 0x4e, 0x54, 0x48, 0x49, 0x41, 0x4e, 0x53,
	0x10, 0x2e, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f,
	0x47, 0x41, 0x4c, 0x41, 0x54, 0x49, 0x41, 0x4e, 0x53, 0x10, 0x2f, 0x12, 0x17, 0x0a, 0x13, 0x42,
	0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x45, 0x50, 0x48, 0x45, 0x53, 0x49, 0x41,
	0x4e, 0x53, 0x10, 0x30, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d,
	0x45, 0x5f, 0x50, 0x48, 0x49, 0x4c, 0x49, 0x50, 0x50, 0x49, 0x41, 0x4e, 0x53, 0x10, 0x31, 0x12,
	0x18, 0x0a, 0x14, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x43, 0x4f, 0x4c,
	0x4f, 0x53, 0x53, 0x49, 0x41, 0x4e, 0x53, 0x10, 0x32, 0x12, 0x1d, 0x0a, 0x19, 0x42, 0x4f, 0x4f,
	0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x31, 0x5f, 0x54, 0x48, 0x45, 0x53, 0x53, 0x41, 0x4c,
	0x4f, 0x4e, 0x49, 0x41, 0x4e, 0x53, 0x10, 0x33, 0x12, 0x1d, 0x0a, 0x19, 0x42, 0x4f, 0x4f, 0x4b,
	0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x32, 0x5f, 0x54, 0x48, 0x45, 0x53, 0x53, 0x41, 0x4c, 0x4f,
	0x4e, 0x49, 0x41, 0x4e, 0x53, 0x10, 0x34, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x4f, 0x4f, 0x4b, 0x5f,
	0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x31, 0x5f, 0x54, 0x49, 0x4d, 0x4f, 0x54, 0x48, 0x59, 0x10, 0x35,
	0x12, 0x17, 0x0a, 0x13, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x32, 0x5f,
	0x54, 0x49, 0x4d, 0x4f, 0x54, 0x48, 0x59, 0x10, 0x36, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x4f, 0x4f,
	0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x49, 0x54, 0x55, 0x53, 0x10, 0x37, 0x12, 0x16,
	0x0a, 0x12, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x48, 0x49, 0x4c,
	0x45, 0x4d, 0x4f, 0x4e, 0x10, 0x38, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e,
	0x41, 0x4d, 0x45, 0x5f, 0x48, 0x45, 0x42, 0x52, 0x45, 0x57, 0x53, 0x10, 0x39, 0x12, 0x13, 0x0a,
	0x0f, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4a, 0x41, 0x4d, 0x45, 0x53,
	0x10, 0x3a, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f,
	0x31, 0x5f, 0x50, 0x45, 0x54, 0x45, 0x52, 0x10, 0x3b, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x4f, 0x4f,
	0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x32, 0x5f, 0x50, 0x45, 0x54, 0x45, 0x52, 0x10, 0x3c,
	0x12, 0x14, 0x0a, 0x10, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x31, 0x5f,
	0x4a, 0x4f, 0x48, 0x4e, 0x10, 0x3d, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e,
	0x41, 0x4d, 0x45, 0x5f, 0x32, 0x5f, 0x4a, 0x4f, 0x48, 0x4e, 0x10, 0x3e, 0x12, 0x14, 0x0a, 0x10,
	0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x33, 0x5f, 0x4a, 0x4f, 0x48, 0x4e,
	0x10, 0x3f, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f,
	0x4a, 0x55, 0x44, 0x45, 0x10, 0x40, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4e,
	0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x56, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x41,
	0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41,
	0x6e, 0x74, 0x68, 0x6f, 0x6e, 0x79, 0x48, 0x65, 0x77, 0x69, 0x6e, 0x73, 0x2f, 0x62, 0x69, 0x62,
	0x6c, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x2f,
	0x76, 0x30, 0x3b, 0x62, 0x69, 0x62, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bible_v1_bible_proto_rawDescOnce sync.Once
	file_bible_v1_bible_proto_rawDescData = file_bible_v1_bible_proto_rawDesc
)

func file_bible_v1_bible_proto_rawDescGZIP() []byte {
	file_bible_v1_bible_proto_rawDescOnce.Do(func() {
		file_bible_v1_bible_proto_rawDescData = protoimpl.X.CompressGZIP(file_bible_v1_bible_proto_rawDescData)
	})
	return file_bible_v1_bible_proto_rawDescData
}

var file_bible_v1_bible_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bible_v1_bible_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_bible_v1_bible_proto_goTypes = []interface{}{
	(BookName)(0),                 // 0: bible.v0.BookName
	(*Translation)(nil),           // 1: bible.v0.Translation
	(*Book)(nil),                  // 2: bible.v0.Book
	(*Chapter)(nil),               // 3: bible.v0.Chapter
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_bible_v1_bible_proto_depIdxs = []int32{
	4, // 0: bible.v0.Translation.revision_date:type_name -> google.protobuf.Timestamp
	2, // 1: bible.v0.Translation.books:type_name -> bible.v0.Book
	0, // 2: bible.v0.Book.id:type_name -> bible.v0.BookName
	3, // 3: bible.v0.Book.chapters:type_name -> bible.v0.Chapter
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_bible_v1_bible_proto_init() }
func file_bible_v1_bible_proto_init() {
	if File_bible_v1_bible_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bible_v1_bible_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Translation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_bible_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Book); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bible_v1_bible_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bible_v1_bible_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bible_v1_bible_proto_goTypes,
		DependencyIndexes: file_bible_v1_bible_proto_depIdxs,
		EnumInfos:         file_bible_v1_bible_proto_enumTypes,
		MessageInfos:      file_bible_v1_bible_proto_msgTypes,
	}.Build()
	File_bible_v1_bible_proto = out.File
	file_bible_v1_bible_proto_rawDesc = nil
	file_bible_v1_bible_proto_goTypes = nil
	file_bible_v1_bible_proto_depIdxs = nil
}
